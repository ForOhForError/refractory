# Generated by Django 5.1.4 on 2024-12-20 02:33

import django.core.validators
import django.db.models.deletion
import re
import refractory_home.models.foundry_models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FoundryInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instance_name", models.CharField(max_length=30, unique=True)),
                (
                    "instance_slug",
                    models.CharField(
                        max_length=30,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[-\\w]+\\Z"),
                                "Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.",
                                "invalid",
                            )
                        ],
                    ),
                ),
                ("display_name", models.CharField(max_length=256, null=True)),
                (
                    "admin_pass",
                    models.CharField(
                        default=refractory_home.models.foundry_models.generate_default_password,
                        max_length=256,
                    ),
                ),
                ("eula_accepted", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="FoundryVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_string", models.CharField(max_length=30, unique=True)),
                (
                    "update_type",
                    models.CharField(
                        choices=[("Full", "Full"), ("Update", "Update")],
                        default="Full",
                        max_length=10,
                    ),
                ),
                (
                    "update_category",
                    models.CharField(
                        choices=[
                            ("Prototype", "Prototype"),
                            ("Development", "Development"),
                            ("Testing", "Testing"),
                            ("Stable", "Stable"),
                        ],
                        default="Stable",
                        max_length=15,
                    ),
                ),
                (
                    "download_status",
                    models.CharField(
                        choices=[
                            ("Not Downloaded", "Not Downloaded"),
                            ("Downloading", "Downloading"),
                            ("Downloaded", "Downloaded"),
                        ],
                        default="Not Downloaded",
                        max_length=15,
                    ),
                ),
                ("build", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="FoundryLicense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license_key",
                    models.CharField(
                        max_length=29,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z1-9]{4}-[A-Z1-9]{4}-[A-Z1-9]{4}-[A-Z1-9]{4}-[A-Z1-9]{4}-[A-Z1-9]{4}$",
                                "Foundry Licenses are of format XXXX-XXXX-XXXX-XXXX-XXXX-XXXX",
                            )
                        ],
                    ),
                ),
                ("license_name", models.CharField(default="", max_length=255)),
                (
                    "instance",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foundry_license",
                        to="refractory_home.foundryinstance",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="foundryinstance",
            name="foundry_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="refractory_home.foundryversion",
            ),
        ),
        migrations.CreateModel(
            name="ManagedFoundryUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_name", models.CharField(default="", max_length=255)),
                ("user_id", models.CharField(default="", max_length=255)),
                (
                    "user_password",
                    models.CharField(
                        default=refractory_home.models.foundry_models.generate_default_password,
                        max_length=64,
                    ),
                ),
                ("world_id", models.CharField(default="", max_length=255)),
                ("managed_gm", models.BooleanField(default=False)),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="refractory_home.foundryinstance",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
